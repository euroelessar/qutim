cmake_minimum_required (VERSION 2.6 FATAL_ERROR)
if( COMMAND cmake_policy )
	cmake_policy( SET CMP0003 NEW )
endif(COMMAND cmake_policy )
project( Protocols )

if ( ${CMAKE_CURRENT_SOURCE_DIR} STREQUAL ${CMAKE_SOURCE_DIR} )
	set(QUTIM_PATH "" CACHE FILEPATH "Path to qutim sources")
	set(QUTIM_BINARY_DIR "" CACHE FILEPATH "Path to qutim build directory")
	set(QUTIM_LIBRARY QUTIM_LIBRARY-NOTFOUND CACHE FILEPATH "Path to qutim library")
endif ( ${CMAKE_CURRENT_SOURCE_DIR} STREQUAL ${CMAKE_SOURCE_DIR} )
if( QUTIM_BINARY_DIR )
	set( QUTIM_INCLUDE_DIR ${QUTIM_BINARY_DIR}/libqutim/include )
	set( QUTIM_LIBRARY_DIR ${QUTIM_BINARY_DIR}/libqutim/ )
endif( QUTIM_BINARY_DIR )

LIST (APPEND CMAKE_MODULE_PATH "cmake")
LIST (APPEND CMAKE_MODULE_PATH "${QUTIM_PATH}/cmake")
option ( QUTIM_ENABLE_ALL_PLUGINS "Enable plugins by default" ON )

INCLUDE (MacroEnsureVersion)
find_package(Qt4 COMPONENTS QtCore QtGui QtNetwork)
if ( ${CMAKE_CURRENT_SOURCE_DIR} STREQUAL ${CMAKE_SOURCE_DIR} )
	set(QUTIM_PATH "" CACHE FILEPATH "Path to qutim sources")
	set(QUTIM_BINARY_DIR "" CACHE FILEPATH "Path to qutim build directory")
	set(QUTIM_LIBRARY QUTIM_LIBRARY-NOTFOUND CACHE FILEPATH "Path to qutim library")
endif ( ${CMAKE_CURRENT_SOURCE_DIR} STREQUAL ${CMAKE_SOURCE_DIR} )
if( QUTIM_BINARY_DIR )
	set( QUTIM_INCLUDE_DIR ${QUTIM_BINARY_DIR}/libqutim/include )
	set( QUTIM_LIBRARY_DIR ${QUTIM_BINARY_DIR}/libqutim/ )
endif( QUTIM_BINARY_DIR )

LIST (APPEND CMAKE_MODULE_PATH "cmake")
LIST (APPEND CMAKE_MODULE_PATH "${QUTIM_PATH}/cmake")
option ( QUTIM_ENABLE_ALL_PLUGINS "Enable plugins by default" ON )
find_package( QutIM REQUIRED )

file( GLOB PROTOCOLS RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}/" "${CMAKE_CURRENT_SOURCE_DIR}/*" )

qutim_add_extensions_dir(.)
